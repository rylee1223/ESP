local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")

local player = Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

-- Create ScreenGui
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "PlayerInfoGui"
screenGui.Parent = playerGui
screenGui.ResetOnSpawn = false

-- Main frame (draggable)
local frame = Instance.new("Frame")
frame.Size = UDim2.new(0, 320, 0, 440) -- taller for search box
frame.Position = UDim2.new(0.5, -160, 0.5, -220)
frame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
frame.BorderSizePixel = 0
frame.Parent = screenGui
frame.Active = true

-- Title bar
local titleBar = Instance.new("Frame")
titleBar.Size = UDim2.new(1, 0, 0, 30)
titleBar.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
titleBar.BorderSizePixel = 0
titleBar.Parent = frame

local title = Instance.new("TextLabel")
title.Size = UDim2.new(1, -40, 1, 0)
title.BackgroundTransparency = 1
title.TextColor3 = Color3.new(1,1,1)
title.Font = Enum.Font.SourceSansBold
title.TextSize = 20
title.Text = "Players Account Info"
title.TextXAlignment = Enum.TextXAlignment.Left
title.Position = UDim2.new(0, 10, 0, 0)
title.Parent = titleBar

-- Open/Close Button
local toggleButton = Instance.new("TextButton")
toggleButton.Size = UDim2.new(0, 30, 1, 0)
toggleButton.Position = UDim2.new(1, -30, 0, 0)
toggleButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
toggleButton.BorderSizePixel = 0
toggleButton.TextColor3 = Color3.new(1,1,1)
toggleButton.Font = Enum.Font.SourceSansBold
toggleButton.TextSize = 20
toggleButton.Text = "–" -- open initially
toggleButton.Parent = titleBar

-- Search Box
local searchBox = Instance.new("TextBox")
searchBox.Size = UDim2.new(1, -10, 0, 30)
searchBox.Position = UDim2.new(0, 5, 0, 35)
searchBox.PlaceholderText = "Search players..."
searchBox.ClearTextOnFocus = false
searchBox.Text = ""
searchBox.TextColor3 = Color3.new(1,1,1)
searchBox.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
searchBox.BorderSizePixel = 0
searchBox.Font = Enum.Font.SourceSans
searchBox.TextSize = 18
searchBox.Parent = frame

-- Scrolling frame for player list
local scrollFrame = Instance.new("ScrollingFrame")
scrollFrame.Size = UDim2.new(1, -10, 1, -75) -- adjusted for search box + title bar
scrollFrame.Position = UDim2.new(0, 5, 0, 70)
scrollFrame.BackgroundTransparency = 1
scrollFrame.BorderSizePixel = 0
scrollFrame.CanvasSize = UDim2.new(0, 0, 0, 0)
scrollFrame.ScrollBarThickness = 8
scrollFrame.Parent = frame

local listLayout = Instance.new("UIListLayout")
listLayout.Padding = UDim.new(0, 5)
listLayout.Parent = scrollFrame

local function getAccountCreation(player)
    if player and player.AccountAge then
        local days = player.AccountAge
        local creationDate = os.date("%Y-%m-%d", os.time() - (days * 24 * 60 * 60))
        return creationDate
    end
    return "N/A"
end

-- Create a simple player label (no thumbnail)
local function createPlayerLabel(p)
    local label = Instance.new("TextLabel")
    label.Size = UDim2.new(1, -10, 0, 40)
    label.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
    label.BorderSizePixel = 0
    label.TextColor3 = Color3.new(1,1,1)
    label.Font = Enum.Font.SourceSans
    label.TextSize = 18
    label.TextXAlignment = Enum.TextXAlignment.Left
    label.Text = p.Name .. " - Created: " .. getAccountCreation(p)
    label.Parent = scrollFrame
    return label
end

-- Populate or update the list according to filter
local function updateList(filter)
    filter = filter:lower()
    -- Clear current labels
    for _, v in pairs(scrollFrame:GetChildren()) do
        if v:IsA("TextLabel") then
            v:Destroy()
        end
    end

    for _, p in ipairs(Players:GetPlayers()) do
        if p.Name:lower():find(filter) then
            createPlayerLabel(p)
        end
    end

    wait() -- wait for layout update
    scrollFrame.CanvasSize = UDim2.new(0, 0, 0, listLayout.AbsoluteContentSize.Y + 10)
end

-- Initialize list with all players
updateList("")

-- Update list on player join/leave with current filter
Players.PlayerAdded:Connect(function()
    updateList(searchBox.Text)
end)
Players.PlayerRemoving:Connect(function()
    updateList(searchBox.Text)
end)

-- Search box listener
searchBox:GetPropertyChangedSignal("Text"):Connect(function()
    updateList(searchBox.Text)
end)

-- Toggle open/close
local isOpen = true
toggleButton.MouseButton1Click:Connect(function()
    isOpen = not isOpen
    if isOpen then
        frame.Size = UDim2.new(0, 320, 0, 440)
        scrollFrame.Visible = true
        searchBox.Visible = true
        toggleButton.Text = "–"
    else
        frame.Size = UDim2.new(0, 320, 0, 30)
        scrollFrame.Visible = false
        searchBox.Visible = false
        toggleButton.Text = "+"
    end
end)

-- Dragging support on title bar (mobile + PC)
local dragging = false
local dragInput, dragStart, startPos

local function updatePosition(input)
    local delta = input.Position - dragStart
    frame.Position = UDim2.new(
        startPos.X.Scale,
        startPos.X.Offset + delta.X,
        startPos.Y.Scale,
        startPos.Y.Offset + delta.Y
    )
end

titleBar.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.Touch or input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = true
        dragStart = input.Position
        startPos = frame.Position

        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

titleBar.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.Touch or input.UserInputType == Enum.UserInputType.MouseMovement then
        dragInput = input
    end
end)

UserInputService.InputChanged:Connect(function(input)
    if input == dragInput and dragging then
        updatePosition(input)
    end
end)
